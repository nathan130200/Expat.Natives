name: Build libexpat native binaries

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  EXPAT_VERSION: 2.7.1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x64, x86]

    steps:
    - uses: actions/checkout@v3

    - name: Download expat source
      shell: bash
      run: |
        curl -LO https://github.com/libexpat/libexpat/releases/download/R_${EXPAT_VERSION//./_}/expat-${EXPAT_VERSION}.tar.gz
        tar -xzf expat-${EXPAT_VERSION}.tar.gz

    - name: Configure CMake build
      shell: bash
      run: |
        mkdir build
        cd build
        cmake ../expat-${EXPAT_VERSION} \
          -DBUILD_shared=ON \
          -DBUILD_tools=OFF \
          -DEXPAT_BUILD_TOOLS=OFF \
          -DEXPAT_BUILD_TESTS=OFF \
          -DEXPAT_BUILD_EXAMPLES=OFF \
          -DBUILD_examples=OFF \
          -DBUILD_tests=OFF \
          -DEXPAT_BUILD_DOCS=OFF \
          -DEXPAT_SHARED_LIBS=ON \
          -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
          -DXML_UNICODE=OFF \
          -DEXPAT_CHAR_TYPE=char \
          -DCMAKE_BUILD_TYPE=Release

    - name: Build expat
      shell: bash
      run: |
        cd build
        cmake --build . --config Release

    - name: Copy to runtimes folder
      shell: bash
      run: |
        RID=""
        EXT=""

        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          RID="win-${{ matrix.arch }}"
          EXT="dll"
        elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          RID="linux-${{ matrix.arch }}"
          EXT="so"
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          RID="osx-${{ matrix.arch }}"
          EXT="dylib"
        fi

        mkdir -p runtimes/$RID/native
        cp build/libexpat.${EXT} runtimes/$RID/native/

    - name: Upload partial artifact
      uses: actions/upload-artifact@v4
      with:
        name: runtimes-${{ matrix.os }}-${{ matrix.arch }}
        path: runtimes/
        retention-days: 1

  merge:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: collected

    - name: Merge folders
      run: |
        mkdir output
        find collected -type f -name "libexpat.*" | while read file; do
          relpath="${file#*/runtimes/}"
          ridpath="runtimes/${relpath}"
          mkdir -p "$(dirname "output/$ridpath")"
          cp "$file" "output/$ridpath"
        done

    - name: Compress result
      run: |
        cd output
        zip -r ../native-libs.zip runtimes

    - name: Upload final zip
      uses: actions/upload-artifact@v4
      with:
        name: native-libs
        path: native-libs.zip
