name: Build and Pack libexpat Native NuGet

on:
  push:
    branches: [ main ]
  pull_request:

env:
  EXPAT_VERSION: 2.6.2

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x64, x86]

    steps:
    - uses: actions/checkout@v3

    - name: Setup dotnet SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'  # pode atualizar para .NET 9 quando dispon√≠vel

    - name: Download libexpat source
      shell: bash
      run: |
        curl -LO https://github.com/libexpat/libexpat/releases/download/R_${EXPAT_VERSION//./_}/expat-${EXPAT_VERSION}.tar.gz
        tar -xzf expat-${EXPAT_VERSION}.tar.gz

    - name: Configure build for PInvoke
      shell: bash
      run: |
        mkdir build
        cd build
        cmake ../expat-${EXPAT_VERSION} \
          -DBUILD_shared=ON \
          -DBUILD_tools=OFF \
          -DBUILD_examples=OFF \
          -DBUILD_tests=OFF \
          -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
          -DEXPAT_BUILD_DOCS=OFF \
          -DEXPAT_SHARED_LIBS=ON \
          -DXML_UNICODE=OFF \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_SHARED_LIBRARY_PREFIX=lib

    - name: Build libexpat
      shell: bash
      run: |
        cd build
        cmake --build . --config Release

    - name: Prepare nuget runtime folders
      shell: bash
      run: |
        ARCH=${{ matrix.arch }}
        OS=${{ matrix.os }}

        if [ "$OS" == "windows-latest" ]; then
          RUNTIME_OS="win"
          OUT_PATH=nuget/runtimes/${RUNTIME_OS}-${ARCH}
          mkdir -p $OUT_PATH
          cp build/libexpat.dll $OUT_PATH/
        elif [ "$OS" == "ubuntu-latest" ]; then
          RUNTIME_OS="linux"
          OUT_PATH=nuget/runtimes/${RUNTIME_OS}-${ARCH}
          mkdir -p $OUT_PATH
          cp build/libexpat.so $OUT_PATH/
        else
          RUNTIME_OS="osx"
          OUT_PATH=nuget/runtimes/${RUNTIME_OS}-${ARCH}
          mkdir -p $OUT_PATH
          cp build/libexpat.dylib $OUT_PATH/
        fi

    - name: Pack NuGet package
      shell: bash
      run: |
        cd nuget
        dotnet pack -c Release --no-build -o ./nupkg

    - name: Upload NuGet package
      uses: actions/upload-artifact@v3
      with:
        name: Expat.Net.Native
        path: nuget/nupkg/*.nupkg
